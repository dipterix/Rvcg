Index: vcglib/vcg/complex/exception.h
===================================================================
--- vcglib.orig/vcg/complex/exception.h
+++ vcglib/vcg/complex/exception.h
@@ -30,7 +30,7 @@ class MissingComponentException : public
 public:
   MissingComponentException(const std::string &err):std::runtime_error(err)
   {
-    std::cout << "Missing Component Exception -" << err << "- \n";
+    //std::cout << "Missing Component Exception -" << err << "- \n";
   }
     virtual const char *what() const throw ()
     {
@@ -44,7 +44,7 @@ class MissingCompactnessException : publ
 public:
   MissingCompactnessException(const std::string &err):std::runtime_error(err)
   {
-    std::cout << "Lack of Compactness Exception -" << err << "- \n";
+    //std::cout << "Lack of Compactness Exception -" << err << "- \n";
   }
     virtual const char *what() const throw ()
     {
@@ -58,7 +58,7 @@ class MissingTriangularRequirementExcept
 public:
   MissingTriangularRequirementException(const std::string &err):std::runtime_error(err)
   {
-    std::cout << "Mesh has to be composed by triangle and not polygons -" << err << "- \n";
+    //std::cout << "Mesh has to be composed by triangle and not polygons -" << err << "- \n";
   }
 
     virtual const char *what() const throw ()
@@ -73,7 +73,7 @@ class MissingPolygonalRequirementExcepti
 public:
   MissingPolygonalRequirementException(const std::string &err):std::runtime_error(err)
   {
-    std::cout << "Mesh has to be composed by polygonal faces (not plain triangles) -" << err << "- \n";
+    //std::cout << "Mesh has to be composed by polygonal faces (not plain triangles) -" << err << "- \n";
   }
 
     virtual const char *what() const throw ()
@@ -103,7 +103,7 @@ class MissingPreconditionException : pub
 public:
   MissingPreconditionException(const std::string &err):std::runtime_error(err)
   {
-    std::cout << "Mesh does not satisfy the following precondition:" << err << "- \n";
+    //std::cout << "Mesh does not satisfy the following precondition:" << err << "- \n";
   }
 
     virtual const char *what() const throw ()
